#!/bin/sh

echo
echo "==================================="
echo " Witnesschain WatchTower installer"
echo "==================================="
echo

cf="watchtower.config.json"

docker_name="--name watchtower"
docker_network="--network host"
docker_read_only=":ro"
docker_volume_mounts="-v /$(pwd)/$cf:/watchtower/src/client/config.json$docker_read_only"
docker_security_options="--security-opt=no-new-privileges --pids-limit=128"

docker_options="$docker_security_options $docker_volume_mounts $docker_network $docker_name"

#---------------- Build the docker-run.sh --------------------------------------

cat <<EOF > docker-run.sh
#!/bin/sh

echo
echo "========================="
echo " Witnesschain WatchTower"
echo "========================="
echo

host_name=\`cat $cf | grep host_name | cut -f4 -d'"'\`

if [ "\$host_name" = "" ]
then
	docker_user_option="--user 65534:65534" # nobody user = 65534
else
	docker_user_option="" # run as root as we need a certificate
fi

if [ -f $cf ]
then
	error="no"

	fields=""
	fields="\${fields} private_key"
	fields="\${fields} eth_testnet_websocket_url"
	fields="\${fields} currently_watching_l2"
	fields="\${fields} op_geth_websocket_url"
	fields="\${fields} op_geth_rpc_url"
	fields="\${fields} op_node_rpc_url"
	fields="\${fields} l2oo_address"

	fields_not_set=""

	for f in \$fields
	do
		lines=\`cat $cf | grep \"\$f\" -n | tr -d ' '\`

		for c in \`echo \$lines | cut -f1- -d,\`
		do
			line_no=\`echo \$c | cut -f1 -d':'\`
			value=\`echo \$c | cut -f4 -d'"'\`

			if [ "\$value" = "" ]
			then
				fields_not_set="\${fields_not_set} \$f:\$line_no"
				error="yes"
			fi
		done
	done

	if [ "\$error" = "yes" ]
	then
		echo "‚ùå Please set the following fields in \"$cf\" at:"

		for fl in \$fields_not_set
		do
			f=\`echo \$fl | cut -f1 -d':'\`
			l=\`echo \$fl | cut -f2 -d':'\`

			echo "\tLine no. \$l field \"\$f\""
		done

		echo
		echo "üîµ Rerun the \"./docker-run.sh\""
		echo

		exit
	fi
fi

docker run \$docker_user_option $docker_options witnesschain/watchtower
EOF

#---------------- End of docker-run.sh -----------------------------------------

chmod +x docker-run.sh

which docker 1>/dev/null 2>/dev/null

if [ "$?" != "0" ]
then
	echo
	echo "üîµ Please install the \"docker\" engine"
	echo "   Refer : <https://docs.docker.com/engine/install/ubuntu/>"
	echo
fi

user_in_docker_group=`groups $USER | grep docker | wc -l`

if [ "$user_in_docker_group" -eq "0" ]
then
	echo "üîµ As \"root\" user:"
	echo "        1. Create and add a \"docker\" group"
	echo "        2. And add the user \"$USER\" to the group"
	echo
	echo "   Refer : <https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user>"
	echo
fi

if [ -f $cf ]
then
	error="no"

	fields=""
	fields="\${fields} private_key"
	fields="\${fields} eth_testnet_websocket_url"
	fields="\${fields} currently_watching_l2"
	fields="\${fields} op_geth_websocket_url"
	fields="\${fields} op_geth_rpc_url"
	fields="\${fields} op_node_rpc_url"
	fields="\${fields} l2oo_address"

	fields_not_set=""

	for f in $fields
	do
		lines=`cat $cf | grep \"$f\" -n | tr -d ' '`

		for c in `echo $lines | cut -f1- -d,`
		do
			line_no=`echo $c | cut -f1 -d':'`
			value=`echo $c | cut -f4 -d'"'`

			if [ "$value" = "" ]
			then
				fields_not_set="${fields_not_set} $f:$line_no"
				error="yes"
			fi
		done
	done

	if [ "$error" = "yes" ]
	then
		echo "‚ùå Please set the following fields in \"$cf\" at:"

		for fl in $fields_not_set
		do
			f=`echo $fl | cut -f1 -d':'`
			l=`echo $fl | cut -f2 -d':'`

			echo "\tLine no. $l field \"$f\""
		done

		echo
		echo "üîµ Finally, run the \"./docker-run.sh\""
		echo

		exit
	fi

	./docker-run.sh
else
	curl https://raw.githubusercontent.com/witnesschain-com/config/main/watchtower/watchtower.config.json > $cf 2>/dev/null

	if [ ! -s "$cf" ]
	then
		echo
		echo "‚ùå The file \"$cf\" could not be downloaded"
		echo
		exit
	fi

	echo "‚úÖ Downloaded the \"$cf\""
	echo
	echo "üîµ Edit the following parameters in \"$cf\":"
	echo "        1. private_key"
	echo "        2. eth_testnet_websocket_url"
	echo "        3. currently_watching_l2"
	echo "        4. host_name                    (optional but recommended for dashboard support)"
	echo "        5. watchtower_failure_alert_url (optional but recommended for getting error notification)"
	echo

	echo "üîµ For each of the L2s in \"$cf\" (e.g. base, optimism, etc.), please provide:"
	echo "        1. op_geth_websocket_url  (op-geth's websocket URL)"
	echo "        2. op_geth_rpc_url    	(op-geth's RPC URL)"
	echo "        3. op_node_rpc_url   		(op-node's RPC URL)"
	echo

	echo "üîµ Finally, run the \"./docker-run.sh\""
	echo
fi
